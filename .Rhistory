num<-as.integer(num)
num
num%%10
num%10
num/10
floor(num)
num
ceiling(1.4)
floor(1.4)
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
num/10
num=num/10
floor(num)
num
num=floor(num)
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
k=nchar(num)
k=as.numeric(k)
m=11011
m=m%%10
m=11011
h=m%%10
m=m/10
m=floor(m)
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
#String
name<- "Shubham
Tiwari"
name
cat(name)
college<-'Yeshwantrao chavan college of engineering'
nchar(college)
grepl('tiwari',name)
grepl('college',college)
#booleans
10 > 9
10 == 9
#Operators
3^2#rxponent
15%%14#used to guess reminder
5%/%2
5/2
5.2%/%1.6
5>=4
#Numbers and DataTypecasting
x<-55
y<-55.5
k<-x+y
k
x=3i
k<-x+y
num1<-"65"
k<-num1+y
num1<-as.numeric(num1)
k<-num1+y
k
k<-as.complex(k)
class(k)
#MAths
min(5, -10, 15)
sqrt(623)
pow(6,2)
abs(-4.7)
ceiling(1.4)
floor(1.4)
claer
q
q
#Data types in R
"vectors"
#Data types in R
"1.Vectors"
source("D:/R_DAS/Prathmesh.R")
q
i <- 1
while (i<5)
{
print (i)
i <- i +1
}
dice <- c(1, 2, 3, 4, 5, 6)
for (x in dice)
{
print(x)
}
my_function <- function (x)
{
return (5*x)
}
print (my_function (4))
print(my_function (5))
print (my_function (9))
fruits <- c("mango","banana","apple","strawberry")
num <- c(9,18,21,7,17,1)
sort (fruits)
k= read.csv("Dataset.csv",
stringsAsFactors=F)
k= read.csv("D:\R_DAS\Practical_4\Dataset.csv",
k= read.csv("D:\\R_DAS\\Practical_4\\Dataset.csv",
stringsAsFactors=F)
print(k)
k= read.csv("D:\\R_DAS\\Practical_4\\Dataset.csv",
stringsAsFactors=F)
k= read.csv("D:\\R_DAS\\Practical_4\\Dataset.csv",
stringsAsFactors=F)
k= read.csv("D:\\R_DAS\\Practical_4\\Dataset.csv",
stringsAsFactors=F)
k= read.csv("D:\\R_DAS\\Practical_4\\Dataset.csv",
stringsAsFactors=F)
print(k)
me = mean(k$age)
mean = mean(k$age)
mean = mean(numeric(k$age))
mean = mean(numeric(k$age))
k= read.csv("D:\\R_DAS\\Practical_4\\dataset1.csv",
stringsAsFactors=F)
print(k)
mean = mean(numeric(k$age))
mean = mean((k$age))
mean
k= read.csv("D:\\R_DAS\\Practical_4\\dataset1.csv",
stringsAsFactors=F)
print(k)
median=median(k$age)
median
cat("The mean Age:"+(mean))
cat("The mean Age:",(mean))
cat("The median of Age",(median))
library(modest)
mode = mfv(k$age)
library(modest)
library(modest)
mode = mfv(k$age)
print(mode)
mode = mfv(k$age)
mode = mfv (k$age)
library(modest)
k= read.csv("D:\\R_DAS\\Practical_4\\dataset1.csv",
stringsAsFactors=F)
print(k)
mean = mean((k$age))
cat("The mean Age:",(mean))
median=median(k$age)
cat("The median of Age",(median))
mode = mfv (k$age)
print(mode)
mfv (k$age)
mlv(k$age)
mlv(k$year)
mfv(k$year)
mode = function(){
return(sort(-table(dataset1$age))[1])
}
mode()
mode = function(){
return(sort(-table(k$age))[1])
}
mode()
k1=mode(k$age)
k1=mode(age)
k1=mode(10,20,10,30,10)
k1
mode()
mode = function(){
return(sort(table(k$age))[1])
}
mode()
cat("variance in Age Fund to be:",(var(k$age)))
cat("Mode value in Column age is found to be ",mode())
mode()
mode = function(){
return(sort(table(k$age))[2])
}
mode()
mode = function(){
return(sort(table(k$age))[1])
}
mode()
}
print("The mode value in column Age and with frequency")
mode()
cat("variance in Age Fund to be:",(var(k$age)))
cat("Satandard Deviation in Age is found to be")
cat("Satandard Deviation in Age is found to be:",sd(k$age))
source("D:/R_DAS/Practical_4/prc3a.R", echo=TRUE)
source("D:/R_DAS/Practical_4/prc3a.R", echo=TRUE)
source("D:/R_DAS/Practical_4/prc3a.R", echo=TRUE)
library(modest)
#imporintg file
k= read.csv("D:\\R_DAS\\Practical_4\\dataset1.csv",
stringsAsFactors=F)
print(k)
#mean
mean = mean((k$age))
cat("The mean Age:",(mean))
#Median
median=median(k$age)
cat("The median of Age",(median))
#mode
mode = function(){
return(sort(table(k$age))[1])
}
print("The mode value in column Age and with frequency")
mode()
#variance
cat("variance in Age Fund to be:",(var(k$age)))
#Standard Deviation
cat("Satandard Deviation in Age is found to be:",sd(k$age))
#Range
r = range(k$age)
cat("Range of Age is given By:",r)
q->IQR(k$age)
q=IQR(k$age)
cat("The quetile range is given by:",q)
cat("The quetile range is given by[Q3-Q1]:",q)
source("D:/R_DAS/Practical_4/prc3a.R", echo=TRUE)
print(k)
#mode
mode = function(){
return(sort(table(k$year))[1])
}
mode()
table(k$year)
mode(m)
m=sort(table(k$year))
m
#mode
mode = function(){
return(sort(table(k$year))[-1])
}
print("The mode value in column Age and with frequency")
mode()
#mode
mode = function(){
return(sort(-table(k$year))[1])
}
print("The mode value in column Age and with frequency")
mode()
#mode
mode = function(){
return(sort(-table(k$year))[-1])
}
print("The mode value in column Age and with frequency")
mode()
return(sort(-table(k$year))[1])
#mode
mode = function(){
return(sort(-table(k$year))[1])
}
print("The mode value in column Age and with frequency")
mode()
library('data.table')
###Frequecncy Distruibution Table:
#Creating Table:
data_table<-data.table(col1=sample(6:9,9,replace=TRUE),
col2=letters[1:3],
col3=c(1,4,1,2,2,2,1,2,2,))
library('data.table')
###Frequecncy Distruibution Table:
#Creating Table:
data_table<-data.table(col1=sample(6:9,9,replace=TRUE),
col2=letters[1:3],
col3=c(1,4,1,2,2,2,1,2,2,))
###Frequecncy Distruibution Table:
#Creating Table:
data_table<-data.table(col1=sample(6:9,9,replace=TRUE),
col2=letters[1:3],
col3=c(1,4,1,2,2,2,1,2,2))
###Frequecncy Distruibution Table:
#Creating Table:
data_table<-table(col1=sample(6:9,9,replace=TRUE),
col2=letters[1:3],
col3=c(1,4,1,2,2,2,1,2,2))
###Frequecncy Distruibution Table:
#Creating Table:
data_table<-table(col1=sample(9,6,6,6,8,7,6,6,8),
col2=letters[1:3],
col3=c(1,4,1,2,2,2,1,2,2))
###Frequecncy Distruibution Table:
#Creating Table:
data_table<-table(col1=c(9,6,6,6,8,7,6,6,8),
col2=letters[1:3],
col3=c(1,4,1,2,2,2,1,2,2))
###Frequecncy Distruibution Table:
#Creating Table:
data_table<-table(col1=c(9,6,6,6,8,7,6,6,8),
col2=range(1:9),
col3=c(1,4,1,2,2,2,1,2,2))
###Frequecncy Distruibution Table:
#Creating Table:
data= matrix(sample(1:5), ncol=4, byrow=TRUE)
###Frequecncy Distruibution Table:
#Creating Table:
data= matrix(sample(1:4), ncol=4, byrow=TRUE)
colnames(data) = c('col1','col2','col3','col4')
rownames(data) <- c('row1','row2','row3','row4')
rownames(data) <- c('row1','row2','row3','row4')
colnames(data) = c('col1','col2','col3','col4')
rownames(data) <- c('row1','row2','row3','row4')
rownames(data) <- c('row1','row2','row3')
###Frequecncy Distruibution Table:
#Creating Table:
data= matrix(sample(1:4), ncol=4, nwow=4)
###Frequecncy Distruibution Table:
#Creating Table:
data= matrix(sample(1:4), ncol=4, nrow=4)
colnames(data) = c('col1','col2','col3','col4')
rownames(data) <- c('row1','row2','row3','row4')
final=as.table(data)
print("Original Table:")
print(final)
###Frequecncy Distruibution Table:
#Creating Table:
df <- data.frame(player = c('AJ', 'Bob', 'Chad', 'Dan', 'Eric', 'Frank'),
position = c('A', 'B', 'B', 'B', 'B', 'A'),
points = c(1, 2, 2, 1, 0, 0))
df
freq <- table(data_table$col1)
freq <- table(df$col2)
print ("Modified Frequency Table for Positon")
print (freq)
print(freq)
freq
data_table <- table(col1 = sample(6 : 9, 9 ,
replace = TRUE),
col2 = letters[1 : 3],
col3 = c(1, 4, 1, 2, 2,
2, 1, 2, 2))
data_table <- data.frame(col1 = sample(6 : 9, 9 ,
replace = TRUE),
col2 = letters[1 : 3],
col3 = c(1, 4, 1, 2, 2,
2, 1, 2, 2))
tab <-table(data_table)
tab
library(data.table)
###Frequecncy Distruibution Table:
x= c(1, 4, 1, 2, 2,2, 1, 2, 2))
###Frequecncy Distruibution Table:
x= c(1, 4, 1, 2, 2,2, 1, 2, 2)
tab <-table(x)
tab
###Frequecncy Distruibution Table:
x= c(1, 4, 1, 2, 2,2, 1, 2, 2,1,4,2,4,1,2,4,4,1,2,4,1,4,2,1,4,2,1,4)
tab <-table(x)
tab
x
cat("Original Value Table:",x)
###Frequecncy Distruibution Table:
x= c(1, 4, 1, 2, 2,2, 1, 2, 2,1,4,2,4,1,2,4,4,1,2,4,1,4,2,1,4,2,1,4)
cat("Original Value Table:",x)
Cat("Frequency Tvble:")
cat("Frequency Table:")
tab <-table(x)
tab
c<-cumsome(tab)
c<-cumsum(tab)
c
print("Commutative Frequency:")
c
print("Relative Frequency Table:")
prop.table(x)
prop.table(tab)
library(data.table)
library(data.table)
library(data.table)
data_table <- data.table(col1 = sample(6 : 9, 9 ,
replace = TRUE),
col2 = letters[1 : 3],
col3 = c(1, 4, 1, 2, 2,
2, 1, 2, 2))
print ("Original DataFrame")
print (data_table)
freq <- table(data_table$col1)
print ("Modified Frequency Table")
print (freq)
prop.table(tab)
#imporintg file
k= read.csv("D:\\R_DAS\\Practical_4\\dataset1.csv",
stringsAsFactors=F)
print(k)
#mean
mean = mean((k$age))
cat("The mean Age:",(mean))
#Median
median=median(k$age)
cat("The median of Age",(median))
#mode
mode = function(){
return(sort(-table(k$year))[1])
}
print("The mode value in column Year and with frequency")
mode()
#variance
cat("variance in Age Fund to be:",(var(k$age)))
#Standard Deviation
cat("Satandard Deviation in Age is found to be:",sd(k$age))
#Range
r = range(k$age)
cat("Range of Age is given By:",r)
q=IQR(k$age)
cat("The quetile range is given by[Q3-Q1]:",q)
###Frequecncy Distruibution Table:
x= c(1, 4, 1, 2, 2,2, 1, 2, 2,1,4,2,4,1,2,4,4,1,2,4,1,4,2,1,4,2,1,4)
cat("Original Value Table:",x)
cat("Frequency Table:")
tab <-table(x)
tab
c<-cumsum(tab)
print("Commutative Frequency Table:")
c
print("Relative Frequency Table:")
prop.table(tab)
setwd("D:/R_DAS/Practical_06")
set.seed(0)
n<-1500
set.seed(0)
n<-1500
set.seed(0)
n<-1500
s_means=rep(NA,n)
for(i in i:n){
s_means[i]=mean(rnorm(20,mean=6,sd=9))
}
for(i in 1:n){
s_means[i]=mean(rnorm(20,mean=6,sd=9))
}
head(s_means)
#creating histogram to show s distribution
hist(s_means,main="",xlab="Sample Means",col="steelblue")
#creating histogram to show s distribution
hist(s_means,main="",xlab="Sample Means",col="red")
#creating histogram to show s distribution
hist(s_means,main="",xlab="Sample Means",col="pink")
#creating histogram to show s distribution
hist(s_means,main="",xlab="Sample Means",col="paleyello")
#creating histogram to show s distribution
hist(s_means,main="",xlab="Sample Means",col="yellow")
#mean,sd & probability of sample
mean(s_means)
sd(s_means)
sum(s_means<=6/length(s_means))
source("D:/R_DAS/Practical_06/prc6.R", echo=TRUE)
set.seed(0)#reproduce random values
n<-1500
s_means=rep(NA,n)#creating an empty vector which contains sample means
for(i in 1:n){
s_means[i]=mean(rnorm(20,mean=6,sd=9))
}
head(s_means)
#creating histogram to show s distribution
hist(s_means,main="",xlab="Sample Means",col="yellow")
#mean,sd & probability of sample
mean(s_means)
sd(s_means)
#mean,sd & probability of sample
cat("Sample_means=",mean(s_means)
#mean,sd & probability of sample
cat("Sample_means=",mean(s_means))
#mean,sd & probability of sample
cat("Sample_means=",mean(s_means))
cat("Sample_Standard deviation=",sd(s_means))
set.seed(0)#reproduce random values
n<-1500
s_means=rep(NA,n)#creating an empty vector which contains sample means
for(i in 1:n){
s_means[i]=mean(rnorm(20,mean=6,sd=9))
}
head(s_means)
#creating histogram to show s distribution
hist(s_means,main="",xlab="Sample Means",col="yellow")
#mean,sd & probability of sample
cat("Sample_means=",mean(s_means))
cat("Sample_Standard deviation=",sd(s_means))
cat("probability that sample mean is less than or equal to 6=",sum(s_means<=6/length(s_means)))
set.seed(0)#reproduce random values
n<-1500
s_means=rep(NA,n)#creating an empty vector which contains sample means
for(i in 1:n){
s_means[i]=mean(rnorm(20,mean=6,sd=9))
}
print("First 6 Sample Means:")
head(s_means)
#creating histogram to show s distribution
hist(s_means,main="",xlab="Sample Means",col="yellow")
#mean,sd & probability of sample
cat("Sample_means=",mean(s_means))
cat("Sample_Standard deviation=",sd(s_means))
cat("probability that sample mean is less than or equal to 6=",sum(s_means<=6/length(s_means)))
source("D:/R_DAS/Practical_06/prc6.R", echo=TRUE)
set.seed(0)#reproduce random values
n<-1500
s_means=rep(NA,n)#creating an empty vector which contains sample means
for(i in 1:n){
s_means[i]=mean(rnorm(20,mean=6,sd=9))
}
print("First 6 Sample Means:")
head(s_means)
#creating histogram to show s distribution
hist(s_means,main="",xlab="Sample Means",col="green")
#mean,sd & probability of sample
cat("Sample_means=",mean(s_means))
cat("Sample_Standard deviation=",sd(s_means))
cat("probability that sample mean is less than or equal to 6=",sum(s_means<=6/length(s_means)))
